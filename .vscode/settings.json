{
    "debug.allowBreakpointsEverywhere": true,
    "files.associations": {
        "*.mup": "json",
        "config": "plaintext"
    },
    "git.branchProtection": [
        "master",
        "argmap2mup-fix"
    ],
    "bash": {
        "path": "bash",
        "icon": "terminal-bash",
        "args": [
            "--init-file",
            "${workspaceFolder}/scripts/argmap_init_script.sh",
        ]
    },
    "terminal.integrated.copyOnSelection": true,
    "terminal.integrated.profiles.linux": {
        "bash": {
            "path": "bash",
            "icon": "terminal-bash",
            "args": [
                "--init-file",
                "${workspaceFolder}/scripts/argmap_init_script.sh",
            ]
        },
    },
    "emmet.excludeLanguages": [],
    "emmet.includeLanguages": {
        "markdown": "html"
    },
    "emmet.triggerExpansionOnTab": true,
    "emmet.showExpandedAbbreviation": "never",
    "cSpell.words": [
        "Argdown",
        "argmap",
        "argmap2lua",
        "argmap2mup",
        "argmap2tikz",
        "argmapjs",
        "argmh",
        "argumend",
        "asinum",
        "Brunellus",
        "ClientRects",
        "libyaml",
        "lyaml",
        "mapjs",
        "mindmup",
        "MindMup",
        "MindMup's",
        "MPE",
        "mup2argmap",
        "pandoc-argmap",
        "parisiensis",
        "subidea",
        "testcontrols",
        "themecss",
        "tinyyaml",
        "undofunc"
    ],
    "cSpell.ignoreWords": [
        "Libes",
        "Qcontainer",
        "Ybuv",
        "argm",
        "argmaplua",
        "argth",
        "dleft",
        "dright",
        "mappack",
        "muplua",
        "tikzlua"
    ],
    "argdown.configFile": "argdown.config.json",
    "argdown.preview.lockMenu": true,
    "lua.targetVersion": "5.3",
    "lua.luacheckPath": "",
    "lua.debug.settings.luaVersion": "5.3",
    "lua.debug.settings.conda_env.argmap": "argmap",
    "lua.debug.settings.argmap.src.folder": "src",
    "lua.debug.settings.system_root": "/opt/miniconda3/envs/${config:lua.debug.settings.conda_env.argmap}",
    "lua.debug.settings.env.path": "/home/s6mike/.local/bin:${config:lua.debug.settings.system_root}/bin:/opt/miniconda3/condabin:/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games",
    "lua.debug.settings.path": "${workspaceFolder}/${config:lua.debug.settings.argmap.src.folder}/?.lua;${workspaceFolder}/lua_modules/share/lua/5.3/?.lua;${workspaceFolder}/lua_modules/share/lua/5.3/?/init.lua;${config:lua.debug.settings.system_root}/share/lua/5.3/?.lua;${config:lua.debug.settings.system_root}/share/lua/5.3/?/init.lua;${config:lua.debug.settings.system_root}/lib/lua/5.3/?.lua;${config:lua.debug.settings.system_root}/lib/lua/5.3/?/init.lua;./?.lua;./?/init.lua;",
    "lua.debug.settings.cpath": "${workspaceFolder}/lua_modules/lib/lua/5.3/?.so;${config:lua.debug.settings.system_root}/lib/lua/5.3/?.so;${config:lua.debug.settings.system_root}/lib/lua/5.3/loadall.so;./?.so;",
    "Lua.runtime.version": "Lua 5.3",
    "Lua.misc.parameters": [
        "--develop=true",
        "--dbgport=11413"
    ],
    "Lua.workspace.library": [
        // "/home/s6mike/.vscode/extensions/tomblind.local-lua-debugger-vscode-0.3.3/debugger/?.lua",
        "${workspaceFolder}/${config:lua.debug.settings.argmap.src.folder}/?.lua",
        "${config:lua.debug.settings.system_root}/share/lua/5.3/?/init.lua",
        "${config:lua.debug.settings.system_root}/lib/lua/5.3/?.lua",
        "${config:lua.debug.settings.system_root}/lib/lua/5.3/?/init.lua",
        "${config:lua.debug.settings.system_root}/lib/lua/5.3/?.so",
        "${config:lua.debug.settings.system_root}/lib/lua/5.3/loadall.so",
    ],
    "pandoc.htmlOptString": "--lua-filter=pandoc-argmap.lua --data-dir=/opt/miniconda3/envs/argmap/share/pandoc",
    "pandoc.pdfOptString": "--lua-filter pandoc-argmap.lua --pdf-engine lualatex --template examples/example-template.latex --data-dir=/opt/miniconda3/envs/argmap/share/pandoc",
    "pandoc.epubOptString": "--lua-filter pandoc-argmap.lua --data-dir=/opt/miniconda3/envs/argmap/share/pandoc",
    "pandoc.docbookOptString": "--lua-filter pandoc-argmap.lua --data-dir=/opt/miniconda3/envs/argmap/share/pandoc",
    "pandoc.asciidocOptString": "--lua-filter pandoc-argmap.lua --data-dir=/opt/miniconda3/envs/argmap/share/pandoc",
    "pandoc.executable": "/opt/miniconda3/envs/argmap/bin/pandoc",
    "markdown-preview-enhanced.latexEngine": "lualatex",
    "markdown-preview-enhanced.usePandocParser": true,
    "markdown-preview-enhanced.enableScriptExecution": true,
    "markdown-preview-enhanced.pandocArguments": [
        "--template=/home/s6mike/git_projects/argmap/pandoc-templates/mapjs/mapjs-main-html5.html", // Variables don't work in this field
        "--lua-filter=/home/s6mike/git_projects/argmap/src/pandoc-argmap.lua", // Variables don't work in this field
        // "--lua-filter=/home/s6mike/git_projects/argmap/src/pandoc-hello.lua", // Variables don't work in this field
        "--data-dir=${config:lua.debug.settings.system_root}/share/pandoc", // Don't think variable is working in this field either
        // "--output=/home/s6mike/git_projects/argmap/test/output/html/test.html",
    ],
    "launch": {
        "env": {
            "PATH": "${config:lua.debug.settings.env.path}",
            "LUA_PATH": "${config:lua.debug.settings.path}",
            "LUA_CPATH": "${config:lua.debug.settings.cpath}",
        },
        "stopOnEntry": false,
        "configurations": [],
        "compounds": []
    },
    "markdown-preview-enhanced.automaticallyShowPreviewOfMarkdownBeingEdited": false,
    "markdown-preview-enhanced.breakOnSingleNewLine": false,
    "markdown-preview-enhanced.frontMatterRenderingOption": "table",
    "markdown-preview-enhanced.hideDefaultVSCodeMarkdownPreviewButtons": false,
    "Lua.runtime.path": [
        "?.lua",
        "?/init.lua",
        "${workspaceFolder}/${config:lua.debug.settings.argmap.src.folder}/?.lua"
    ],
    "Lua.diagnostics.globals": [
        "pandoc",
        "FORMAT",
        "PANDOC_STATE",
        "Logger",
        "DIR_MJS_JSON",
        "PATH_MJS_JSON",
    ],
    // Used by launch.json
    "env.path_mjs_home": "/mapjs"
}